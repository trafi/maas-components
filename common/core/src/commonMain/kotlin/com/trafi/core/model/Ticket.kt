/**
 * Core Whitelabel API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.trafi.core.model

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 *
 *
 * @param id
 * @param providerId
 * @param productId
 * @param title
 * @param originalTitle
 * @param iconType
 * @param expiryPeriodMillis
 * @param isRefundable
 * @param status
 * @param partId
 * @param subtitle
 * @param information
 * @param description
 * @param additionalInfo
 * @param purchasedAt
 * @param validFrom
 * @param validTo
 * @param renewsOn
 * @param refundedAt
 * @param recentPurchase
 * @param departureStop
 * @param qrCode
 * @param html
 * @param priceDetails
 * @param meta
 * @param product
 * @param customerCode
 * @param availableOn
 * @param isForBoardingOnly
 */
@Serializable
data class Ticket(

    @SerialName(value = "id") @Required val id: kotlin.String,

    @SerialName(value = "providerId") @Required val providerId: kotlin.String,

    @SerialName(value = "productId") @Required val productId: kotlin.String,

    @SerialName(value = "title") @Required val title: kotlin.String,

    @SerialName(value = "originalTitle") @Required val originalTitle: kotlin.String,

    @SerialName(value = "iconType") @Required val iconType: IconType,

    @SerialName(value = "expiryPeriodMillis") @Required val expiryPeriodMillis: kotlin.Long,

    @SerialName(value = "isRefundable") @Required val isRefundable: kotlin.Boolean,

    @SerialName(value = "status") @Required val status: TicketStatus,

    @SerialName(value = "partId") val partId: kotlin.String? = null,

    @SerialName(value = "subtitle") val subtitle: kotlin.String? = null,

    @SerialName(value = "information") val information: kotlin.String? = null,

    @SerialName(value = "description") val description: kotlin.String? = null,

    @SerialName(value = "additionalInfo") val additionalInfo: kotlin.String? = null,

    @SerialName(value = "purchasedAt") val purchasedAt: kotlin.Long? = null,

    @SerialName(value = "validFrom") val validFrom: kotlin.Long? = null,

    @SerialName(value = "validTo") val validTo: kotlin.Long? = null,

    @SerialName(value = "renewsOn") val renewsOn: kotlin.Long? = null,

    @SerialName(value = "refundedAt") val refundedAt: kotlin.Long? = null,

    @SerialName(value = "recentPurchase") val recentPurchase: TicketRecentPurchase? = null,

    @SerialName(value = "departureStop") val departureStop: kotlin.String? = null,

    @SerialName(value = "qrCode") val qrCode: kotlin.String? = null,

    @SerialName(value = "html") val html: kotlin.String? = null,

    @SerialName(value = "priceDetails") val priceDetails: kotlin.String? = null,

    @SerialName(value = "meta") val meta: kotlin.String? = null,

    @SerialName(value = "product") val product: TicketActivationProduct? = null,

    @SerialName(value = "customerCode") val customerCode: kotlin.String? = null,

    @SerialName(value = "availableOn") val availableOn: AvailableOn? = null,

    @SerialName(value = "isForBoardingOnly") val isForBoardingOnly: kotlin.Boolean? = null

)
