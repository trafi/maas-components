/**
 * Core Whitelabel API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.trafi.core.model

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 *
 *
 * @param id
 * @param provider
 * @param status
 * @param mode
 * @param currency
 * @param currentTime
 * @param priceBreakdowns
 * @param fuelCards
 * @param feeInfo
 * @param restrictions
 * @param paymentMethodId
 * @param tripPurposeId
 * @param price
 * @param isPriceFinal
 * @param distanceMeters
 * @param startTime
 * @param endTime
 * @param from
 * @param to
 * @param vehicle
 * @param feedbackId
 * @param purchaseBreakdown
 * @param notes
 */
@Serializable
data class RentalBooking(

    @SerialName(value = "id") @Required val id: kotlin.String,

    @SerialName(value = "provider") @Required val provider: Provider,

    @SerialName(value = "status") @Required val status: RentalBookingStatus,

    @SerialName(value = "mode") @Required val mode: RentalTripMode,

    @SerialName(value = "currency") @Required val currency: kotlin.String,

    @SerialName(value = "currentTime") @Required val currentTime: kotlin.Long,

    @SerialName(value = "priceBreakdowns") @Required val priceBreakdowns: kotlin.collections.List<PriceBreakdown>,

    @SerialName(value = "fuelCards") @Required val fuelCards: kotlin.collections.List<FuelCard>,

    @SerialName(value = "feeInfo") @Required val feeInfo: BookingFeeInfo,

    @SerialName(value = "restrictions") @Required val restrictions: RentalBookingRestrictions,

    @SerialName(value = "paymentMethodId") val paymentMethodId: kotlin.String? = null,

    @SerialName(value = "tripPurposeId") val tripPurposeId: kotlin.String? = null,

    @SerialName(value = "price") val price: kotlin.Double? = null,

    @SerialName(value = "isPriceFinal") val isPriceFinal: kotlin.Boolean? = null,

    @SerialName(value = "distanceMeters") val distanceMeters: kotlin.Long? = null,

    @SerialName(value = "startTime") val startTime: kotlin.String? = null,

    @SerialName(value = "endTime") val endTime: kotlin.String? = null,

    @SerialName(value = "from") val from: RentalLocation? = null,

    @SerialName(value = "to") val to: RentalLocation? = null,

    @SerialName(value = "vehicle") val vehicle: RentalVehicle? = null,

    @SerialName(value = "feedbackId") val feedbackId: kotlin.String? = null,

    @SerialName(value = "purchaseBreakdown") val purchaseBreakdown: PurchaseBreakdown? = null,

    @SerialName(value = "notes") val notes: kotlin.collections.List<Note>? = null

)
