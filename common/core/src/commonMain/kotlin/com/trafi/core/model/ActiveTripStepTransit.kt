/**
 * Core Whitelabel API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.trafi.core.model

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 *
 *
 * @param path
 * @param schedule
 * @param track
 * @param stops
 * @param alternatives
 * @param start
 * @param end
 * @param startTime
 * @param endTime
 * @param exactDeparture
 * @param intervalDeparture
 * @param stepFraction Defined in [0..1], where 0 is first stop, and 1 is last stop, as if distance between all stops is equal.
 * @param duration
 */
@Serializable
data class ActiveTripStepTransit(

    @SerialName(value = "path") @Required val path: Path,

    @SerialName(value = "schedule") @Required val schedule: Schedule,

    @SerialName(value = "track") @Required val track: Track,

    @SerialName(value = "stops") @Required val stops: kotlin.collections.List<RouteSegmentStop>,

    @SerialName(value = "alternatives") @Required val alternatives: kotlin.collections.List<TransitAlternative>,

    @SerialName(value = "start") @Required val start: Location,

    @SerialName(value = "end") @Required val end: Location,

    @SerialName(value = "startTime") @Required val startTime: kotlin.String,

    @SerialName(value = "endTime") @Required val endTime: kotlin.String,

    @SerialName(value = "exactDeparture") val exactDeparture: RouteExactDeparture? = null,

    @SerialName(value = "intervalDeparture") val intervalDeparture: RouteIntervalDeparture? = null,

    /* Defined in [0..1], where 0 is first stop, and 1 is last stop, as if distance between all stops is equal. */
    @SerialName(value = "stepFraction") val stepFraction: kotlin.Double? = null,

    @SerialName(value = "duration") val duration: Duration? = null

)
