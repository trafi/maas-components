package com.trafi.sample

import android.util.Log
import androidx.activity.ComponentActivity
import androidx.activity.result.IntentSenderRequest
import androidx.activity.result.contract.ActivityResultContracts
import com.google.android.gms.auth.api.identity.GetSignInIntentRequest
import com.google.android.gms.auth.api.identity.Identity
import com.google.android.gms.common.api.ApiException
import com.google.firebase.auth.AuthCredential
import com.google.firebase.auth.GoogleAuthProvider

class GoogleIdentityProvider(
    private val activity: ComponentActivity,
    private val onSignInSuccess: (AuthCredential) -> Unit,
    private val onSignInError: (Throwable) -> Unit,
) {
    private val signInForResult =
        activity.registerForActivityResult(
            ActivityResultContracts.StartIntentSenderForResult()
        ) { result ->
            try {
                val credential =
                    Identity.getSignInClient(activity).getSignInCredentialFromIntent(result.data)
                onSignInSuccess(GoogleAuthProvider.getCredential(credential.googleIdToken, null))
            } catch (e: ApiException) {
                Log.w(TAG, "Google sign in failed", e)
                onSignInError(e)
            }
        }

    fun signIn() {
        // this resource is automatically generated by the com.google.gms.google-services plugin
        val serverClientId = activity.getString(R.string.default_web_client_id)

        val request: GetSignInIntentRequest = GetSignInIntentRequest.builder()
            .setServerClientId(serverClientId)
            .build()

        Identity.getSignInClient(activity)
            .getSignInIntent(request)
            .addOnSuccessListener { result ->
                signInForResult.launch(IntentSenderRequest.Builder(result.intentSender).build())
            }
            .addOnFailureListener { e ->
                Log.w(TAG, "Google sign in failed", e);
                onSignInError(e)
            }
    }
}

private val TAG = GoogleIdentityProvider::class.simpleName
